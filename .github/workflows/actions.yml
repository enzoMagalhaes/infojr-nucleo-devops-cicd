name: Setup infraestructure and push docker img to Artifact Registry

on:
  push:
    branches:
      - master
      - dev

env:
  IMAGE_NAME: example-api
  IMAGE_FOLDER: images

jobs:
  provision_infraestructure:
    name: provision app infraestructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init -backend-config=backend.conf
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          # these TF_VAR_<var_name> can be accessed on terraform by var.<var name>
          # (e.g.: TF_VAR_project can be accessed on main.tf as var.project)
          TF_VAR_project: ${{ secrets.TF_VAR_project }}
          TF_VAR_region: ${{ secrets.TF_VAR_region }}
          TF_VAR_zone: ${{ secrets.TF_VAR_zone }}
          TF_VAR_repository_name: ${{ env.IMAGE_FOLDER }}
          TF_VAR_bucket_name: ${{ secrets.GCS_BUCKET_NAME }}
          TF_VAR_bucket_location: ${{ secrets.GCS_BUCKET_LOCATION }}

      - name: Terraform Format
        working-directory: ./terraform
        run: terraform fmt -check

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
          TF_VAR_project: ${{ secrets.TF_VAR_project }}
          TF_VAR_region: ${{ secrets.TF_VAR_region }}
          TF_VAR_zone: ${{ secrets.TF_VAR_zone }}
          TF_VAR_repository_name: ${{ env.IMAGE_FOLDER }}
          TF_VAR_bucket_name: ${{ secrets.GCS_BUCKET_NAME }}
          TF_VAR_bucket_location: ${{ secrets.GCS_BUCKET_LOCATION }}

  publish_app_container_to_gcp:
    name: build container and push to GCP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:latest ./src/api

      - name: Configure Docker Client
        run: gcloud auth configure-docker us-east1-docker.pkg.dev #without setting up configure docker for the specific region that you want to deploy the image, both artifact registry and cloud run throw authentication errors even with the auth@v1 action

      - name: Push Docker Image to Artifact Registry
        env:
          GIT_TAG: v0.1.0

        run: |-
          docker tag $IMAGE_NAME:latest us-east1-docker.pkg.dev/${{secrets.TF_VAR_project}}/$IMAGE_FOLDER/$IMAGE_NAME:latest 
          docker tag $IMAGE_NAME:latest us-east1-docker.pkg.dev/${{secrets.TF_VAR_project}}/$IMAGE_FOLDER/$IMAGE_NAME:$GIT_TAG
          docker push us-east1-docker.pkg.dev/${{secrets.TF_VAR_project}}/$IMAGE_FOLDER/$IMAGE_NAME:latest
          docker push us-east1-docker.pkg.dev/${{secrets.TF_VAR_project}}/$IMAGE_FOLDER/$IMAGE_NAME:$GIT_TAG

      - name: Deploy image to Cloud Run
        uses: "google-github-actions/deploy-cloudrun@v1"
        with:
          service: ${{ env.IMAGE_NAME }}
          image: us-east1-docker.pkg.dev/${{secrets.TF_VAR_project}}/${{ env.IMAGE_FOLDER }}/${{ env.IMAGE_NAME }}:latest
